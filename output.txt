Benchmark: ====== dotty (scala) [default], iteration 0 started ======
Benchmark: GC before operation: completed in 36.591 ms, heap usage 11.950 MB -> 6.564 MB.
Benchmark: ====== dotty (scala) [default], iteration 0 completed (16598.564 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 1 started ======
Benchmark: GC before operation: completed in 69.573 ms, heap usage 75.376 MB -> 23.953 MB.
Benchmark: ====== dotty (scala) [default], iteration 1 completed (6253.157 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 2 started ======
Benchmark: GC before operation: completed in 98.950 ms, heap usage 76.704 MB -> 23.978 MB.
Benchmark: ====== dotty (scala) [default], iteration 2 completed (5043.557 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 3 started ======
Benchmark: GC before operation: completed in 56.648 ms, heap usage 71.847 MB -> 23.991 MB.
Benchmark: ====== dotty (scala) [default], iteration 3 completed (3912.241 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 4 started ======
Benchmark: GC before operation: completed in 86.893 ms, heap usage 84.309 MB -> 24.000 MB.
Benchmark: ====== dotty (scala) [default], iteration 4 completed (3440.131 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 5 started ======
Benchmark: GC before operation: completed in 94.790 ms, heap usage 74.500 MB -> 24.024 MB.
Benchmark: ====== dotty (scala) [default], iteration 5 completed (3381.438 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 6 started ======
Benchmark: GC before operation: completed in 89.741 ms, heap usage 62.985 MB -> 24.032 MB.
Benchmark: ====== dotty (scala) [default], iteration 6 completed (3352.733 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 7 started ======
Benchmark: GC before operation: completed in 56.873 ms, heap usage 91.528 MB -> 24.042 MB.
Benchmark: ====== dotty (scala) [default], iteration 7 completed (2942.240 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 8 started ======
Benchmark: GC before operation: completed in 58.878 ms, heap usage 84.535 MB -> 24.046 MB.
Benchmark: ====== dotty (scala) [default], iteration 8 completed (2656.673 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 9 started ======
Benchmark: GC before operation: completed in 59.025 ms, heap usage 83.449 MB -> 24.056 MB.
Benchmark: ====== dotty (scala) [default], iteration 9 completed (2466.567 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 10 started ======
Benchmark: GC before operation: completed in 85.449 ms, heap usage 85.056 MB -> 24.058 MB.
Benchmark: ====== dotty (scala) [default], iteration 10 completed (2312.787 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 11 started ======
Benchmark: GC before operation: completed in 60.018 ms, heap usage 71.050 MB -> 24.065 MB.
Benchmark: ====== dotty (scala) [default], iteration 11 completed (2580.125 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 12 started ======
Benchmark: GC before operation: completed in 60.591 ms, heap usage 66.056 MB -> 24.065 MB.
Benchmark: ====== dotty (scala) [default], iteration 12 completed (2289.605 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 13 started ======
Benchmark: GC before operation: completed in 80.832 ms, heap usage 108.562 MB -> 24.073 MB.
Benchmark: ====== dotty (scala) [default], iteration 13 completed (2191.762 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 14 started ======
Benchmark: GC before operation: completed in 63.318 ms, heap usage 137.254 MB -> 24.074 MB.
Benchmark: ====== dotty (scala) [default], iteration 14 completed (2222.247 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 15 started ======
Benchmark: GC before operation: completed in 62.195 ms, heap usage 108.074 MB -> 24.082 MB.
Benchmark: ====== dotty (scala) [default], iteration 15 completed (2030.593 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 16 started ======
Benchmark: GC before operation: completed in 95.556 ms, heap usage 91.485 MB -> 24.085 MB.
Benchmark: ====== dotty (scala) [default], iteration 16 completed (1780.002 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 17 started ======
Benchmark: GC before operation: completed in 62.490 ms, heap usage 115.079 MB -> 24.092 MB.
Benchmark: ====== dotty (scala) [default], iteration 17 completed (1982.684 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 18 started ======
Benchmark: GC before operation: completed in 61.176 ms, heap usage 77.485 MB -> 24.095 MB.
Benchmark: ====== dotty (scala) [default], iteration 18 completed (2140.470 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 19 started ======
Benchmark: GC before operation: completed in 62.592 ms, heap usage 105.496 MB -> 24.102 MB.
Benchmark: ====== dotty (scala) [default], iteration 19 completed (1779.351 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 20 started ======
Benchmark: GC before operation: completed in 67.692 ms, heap usage 83.485 MB -> 24.103 MB.
Benchmark: ====== dotty (scala) [default], iteration 20 completed (1759.644 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 21 started ======
Benchmark: GC before operation: completed in 63.155 ms, heap usage 85.454 MB -> 24.109 MB.
Benchmark: ====== dotty (scala) [default], iteration 21 completed (1847.150 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 22 started ======
Benchmark: GC before operation: completed in 64.937 ms, heap usage 113.100 MB -> 24.112 MB.
Benchmark: ====== dotty (scala) [default], iteration 22 completed (1784.903 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 23 started ======
Benchmark: GC before operation: completed in 63.387 ms, heap usage 77.485 MB -> 24.119 MB.
Benchmark: ====== dotty (scala) [default], iteration 23 completed (1732.187 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 24 started ======
Benchmark: GC before operation: completed in 72.771 ms, heap usage 61.353 MB -> 24.120 MB.
Benchmark: ====== dotty (scala) [default], iteration 24 completed (1658.406 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 25 started ======
Benchmark: GC before operation: completed in 76.266 ms, heap usage 65.379 MB -> 24.125 MB.
Benchmark: ====== dotty (scala) [default], iteration 25 completed (1797.822 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 26 started ======
Benchmark: GC before operation: completed in 61.860 ms, heap usage 105.078 MB -> 24.128 MB.
Benchmark: ====== dotty (scala) [default], iteration 26 completed (1619.212 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 27 started ======
Benchmark: GC before operation: completed in 65.893 ms, heap usage 86.985 MB -> 24.133 MB.
Benchmark: ====== dotty (scala) [default], iteration 27 completed (1724.284 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 28 started ======
Benchmark: GC before operation: completed in 69.075 ms, heap usage 77.266 MB -> 24.134 MB.
Benchmark: ====== dotty (scala) [default], iteration 28 completed (1606.225 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 29 started ======
Benchmark: GC before operation: completed in 88.381 ms, heap usage 82.985 MB -> 24.140 MB.
Benchmark: ====== dotty (scala) [default], iteration 29 completed (1621.353 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 0 started ======
Benchmark: GC before operation: completed in 104.873 ms, heap usage 68.485 MB -> 9.515 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 0 completed (21028.504 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 1 started ======
Benchmark: GC before operation: completed in 19.472 ms, heap usage 576.835 MB -> 10.824 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 1 completed (16370.781 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 2 started ======
Benchmark: GC before operation: completed in 18.859 ms, heap usage 609.831 MB -> 10.831 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 2 completed (15903.640 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 3 started ======
Benchmark: GC before operation: completed in 18.470 ms, heap usage 628.337 MB -> 10.832 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 3 completed (15780.620 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 4 started ======
Benchmark: GC before operation: completed in 18.374 ms, heap usage 677.337 MB -> 10.832 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 4 completed (15717.746 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 5 started ======
Benchmark: GC before operation: completed in 15.494 ms, heap usage 480.184 MB -> 10.832 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 5 completed (16062.813 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 6 started ======
Benchmark: GC before operation: completed in 15.634 ms, heap usage 652.332 MB -> 10.832 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 6 completed (16029.931 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 7 started ======
Benchmark: GC before operation: completed in 17.366 ms, heap usage 611.843 MB -> 10.175 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 7 completed (15907.779 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 8 started ======
Benchmark: GC before operation: completed in 28.453 ms, heap usage 559.614 MB -> 10.092 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 8 completed (15900.396 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 9 started ======
Benchmark: GC before operation: completed in 14.854 ms, heap usage 607.972 MB -> 10.094 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 9 completed (15682.713 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 10 started ======
Benchmark: GC before operation: completed in 22.839 ms, heap usage 577.984 MB -> 10.093 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 10 completed (15898.938 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 11 started ======
Benchmark: GC before operation: completed in 14.254 ms, heap usage 548.522 MB -> 10.093 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 11 completed (15765.244 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 12 started ======
Benchmark: GC before operation: completed in 16.672 ms, heap usage 646.472 MB -> 10.094 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 12 completed (15783.333 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 13 started ======
Benchmark: GC before operation: completed in 15.068 ms, heap usage 591.288 MB -> 10.094 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 13 completed (16673.726 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 14 started ======
Benchmark: GC before operation: completed in 14.673 ms, heap usage 504.228 MB -> 10.093 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 14 completed (15954.402 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 15 started ======
Benchmark: GC before operation: completed in 26.399 ms, heap usage 654.370 MB -> 11.929 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 15 completed (15910.978 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 16 started ======
Benchmark: GC before operation: completed in 14.837 ms, heap usage 542.291 MB -> 10.093 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 16 completed (15601.325 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 17 started ======
Benchmark: GC before operation: completed in 18.154 ms, heap usage 696.472 MB -> 9.562 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 17 completed (15938.327 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 18 started ======
Benchmark: GC before operation: completed in 13.096 ms, heap usage 76.449 MB -> 9.562 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 18 completed (15977.096 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 19 started ======
Benchmark: GC before operation: completed in 12.610 ms, heap usage 32.501 MB -> 9.562 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 19 completed (16125.628 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 20 started ======
Benchmark: GC before operation: completed in 16.023 ms, heap usage 544.973 MB -> 9.562 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 20 completed (16249.743 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 21 started ======
Benchmark: GC before operation: completed in 16.372 ms, heap usage 604.396 MB -> 9.562 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 21 completed (15468.640 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 22 started ======
Benchmark: GC before operation: completed in 13.879 ms, heap usage 521.424 MB -> 9.562 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 22 completed (16347.935 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 23 started ======
Benchmark: GC before operation: completed in 14.085 ms, heap usage 545.875 MB -> 9.562 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 23 completed (16551.153 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 24 started ======
Benchmark: GC before operation: completed in 14.740 ms, heap usage 583.793 MB -> 9.562 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 24 completed (15935.815 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 25 started ======
Benchmark: GC before operation: completed in 36.130 ms, heap usage 686.576 MB -> 9.563 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 25 completed (16178.633 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 26 started ======
Benchmark: GC before operation: completed in 14.715 ms, heap usage 589.991 MB -> 9.562 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 26 completed (15949.136 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 27 started ======
Benchmark: GC before operation: completed in 15.154 ms, heap usage 598.585 MB -> 9.563 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 27 completed (16092.745 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 28 started ======
Benchmark: GC before operation: completed in 14.932 ms, heap usage 636.881 MB -> 9.563 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 28 completed (15751.971 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 29 started ======
Benchmark: GC before operation: completed in 14.691 ms, heap usage 634.562 MB -> 9.563 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 29 completed (16094.587 ms) ======
