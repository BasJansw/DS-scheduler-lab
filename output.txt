Benchmark: ====== dotty (scala) [default], iteration 0 started ======
Benchmark: GC before operation: completed in 13.838 ms, heap usage 13.926 MB -> 6.530 MB.
Benchmark: ====== dotty (scala) [default], iteration 0 completed (15953.668 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 1 started ======
Benchmark: GC before operation: completed in 67.145 ms, heap usage 89.492 MB -> 23.860 MB.
Benchmark: ====== dotty (scala) [default], iteration 1 completed (7696.735 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 2 started ======
Benchmark: GC before operation: completed in 64.415 ms, heap usage 78.600 MB -> 23.879 MB.
Benchmark: ====== dotty (scala) [default], iteration 2 completed (5192.519 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 3 started ======
Benchmark: GC before operation: completed in 84.360 ms, heap usage 86.172 MB -> 23.897 MB.
Benchmark: ====== dotty (scala) [default], iteration 3 completed (4523.012 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 4 started ======
Benchmark: GC before operation: completed in 69.614 ms, heap usage 67.897 MB -> 23.899 MB.
Benchmark: ====== dotty (scala) [default], iteration 4 completed (4041.302 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 5 started ======
Benchmark: GC before operation: completed in 72.179 ms, heap usage 87.899 MB -> 23.916 MB.
Benchmark: ====== dotty (scala) [default], iteration 5 completed (3582.538 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 6 started ======
Benchmark: GC before operation: completed in 81.060 ms, heap usage 88.794 MB -> 23.926 MB.
Benchmark: ====== dotty (scala) [default], iteration 6 completed (3332.593 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 7 started ======
Benchmark: GC before operation: completed in 67.397 ms, heap usage 77.394 MB -> 23.938 MB.
Benchmark: ====== dotty (scala) [default], iteration 7 completed (3218.173 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 8 started ======
Benchmark: GC before operation: completed in 71.469 ms, heap usage 92.919 MB -> 23.943 MB.
Benchmark: ====== dotty (scala) [default], iteration 8 completed (3263.055 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 9 started ======
Benchmark: GC before operation: completed in 141.366 ms, heap usage 66.919 MB -> 23.955 MB.
Benchmark: ====== dotty (scala) [default], iteration 9 completed (2743.586 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 10 started ======
Benchmark: GC before operation: completed in 61.931 ms, heap usage 102.439 MB -> 23.958 MB.
Benchmark: ====== dotty (scala) [default], iteration 10 completed (2592.879 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 11 started ======
Benchmark: GC before operation: completed in 87.924 ms, heap usage 87.919 MB -> 23.964 MB.
Benchmark: ====== dotty (scala) [default], iteration 11 completed (2472.914 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 12 started ======
Benchmark: GC before operation: completed in 91.141 ms, heap usage 88.464 MB -> 23.967 MB.
Benchmark: ====== dotty (scala) [default], iteration 12 completed (2341.090 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 13 started ======
Benchmark: GC before operation: completed in 65.075 ms, heap usage 118.967 MB -> 23.972 MB.
Benchmark: ====== dotty (scala) [default], iteration 13 completed (2713.104 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 14 started ======
Benchmark: GC before operation: completed in 86.152 ms, heap usage 66.463 MB -> 23.975 MB.
Benchmark: ====== dotty (scala) [default], iteration 14 completed (2263.850 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 15 started ======
Benchmark: GC before operation: completed in 92.110 ms, heap usage 68.472 MB -> 23.980 MB.
Benchmark: ====== dotty (scala) [default], iteration 15 completed (2578.411 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 16 started ======
Benchmark: GC before operation: completed in 90.536 ms, heap usage 65.480 MB -> 23.984 MB.
Benchmark: ====== dotty (scala) [default], iteration 16 completed (2324.292 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 17 started ======
Benchmark: GC before operation: completed in 71.200 ms, heap usage 100.482 MB -> 23.993 MB.
Benchmark: ====== dotty (scala) [default], iteration 17 completed (2622.822 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 18 started ======
Benchmark: GC before operation: completed in 73.836 ms, heap usage 86.419 MB -> 23.998 MB.
Benchmark: ====== dotty (scala) [default], iteration 18 completed (2211.240 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 19 started ======
Benchmark: GC before operation: completed in 101.461 ms, heap usage 109.448 MB -> 24.006 MB.
Benchmark: ====== dotty (scala) [default], iteration 19 completed (2361.329 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 20 started ======
Benchmark: GC before operation: completed in 70.617 ms, heap usage 97.919 MB -> 24.008 MB.
Benchmark: ====== dotty (scala) [default], iteration 20 completed (2074.168 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 21 started ======
Benchmark: GC before operation: completed in 75.264 ms, heap usage 66.919 MB -> 24.015 MB.
Benchmark: ====== dotty (scala) [default], iteration 21 completed (2086.108 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 22 started ======
Benchmark: GC before operation: completed in 72.011 ms, heap usage 82.919 MB -> 24.016 MB.
Benchmark: ====== dotty (scala) [default], iteration 22 completed (2041.205 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 23 started ======
Benchmark: GC before operation: completed in 70.940 ms, heap usage 109.503 MB -> 24.025 MB.
Benchmark: ====== dotty (scala) [default], iteration 23 completed (1966.271 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 24 started ======
Benchmark: GC before operation: completed in 69.679 ms, heap usage 75.419 MB -> 24.026 MB.
Benchmark: ====== dotty (scala) [default], iteration 24 completed (2144.544 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 25 started ======
Benchmark: GC before operation: completed in 88.354 ms, heap usage 62.827 MB -> 24.032 MB.
Benchmark: ====== dotty (scala) [default], iteration 25 completed (1867.714 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 26 started ======
Benchmark: GC before operation: completed in 61.207 ms, heap usage 65.919 MB -> 24.030 MB.
Benchmark: ====== dotty (scala) [default], iteration 26 completed (2018.860 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 27 started ======
Benchmark: GC before operation: completed in 70.710 ms, heap usage 77.419 MB -> 24.037 MB.
Benchmark: ====== dotty (scala) [default], iteration 27 completed (2043.541 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 28 started ======
Benchmark: GC before operation: completed in 63.792 ms, heap usage 64.958 MB -> 24.037 MB.
Benchmark: ====== dotty (scala) [default], iteration 28 completed (2071.683 ms) ======
Benchmark: ====== dotty (scala) [default], iteration 29 started ======
Benchmark: GC before operation: completed in 91.049 ms, heap usage 85.410 MB -> 24.045 MB.
Benchmark: ====== dotty (scala) [default], iteration 29 completed (1999.169 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 0 started ======
Benchmark: GC before operation: completed in 87.426 ms, heap usage 67.919 MB -> 9.791 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 0 completed (20488.279 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 1 started ======
Benchmark: GC before operation: completed in 22.965 ms, heap usage 495.938 MB -> 10.869 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 1 completed (16339.191 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 2 started ======
Benchmark: GC before operation: completed in 19.584 ms, heap usage 657.575 MB -> 10.876 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 2 completed (16468.967 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 3 started ======
Benchmark: GC before operation: completed in 19.794 ms, heap usage 572.185 MB -> 10.244 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 3 completed (16949.373 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 4 started ======
Benchmark: GC before operation: completed in 21.927 ms, heap usage 633.718 MB -> 10.244 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 4 completed (16754.233 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 5 started ======
Benchmark: GC before operation: completed in 19.812 ms, heap usage 555.518 MB -> 10.244 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 5 completed (16850.983 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 6 started ======
Benchmark: GC before operation: completed in 18.320 ms, heap usage 650.191 MB -> 10.245 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 6 completed (16610.132 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 7 started ======
Benchmark: GC before operation: completed in 23.098 ms, heap usage 623.799 MB -> 10.245 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 7 completed (15424.662 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 8 started ======
Benchmark: GC before operation: completed in 22.041 ms, heap usage 586.996 MB -> 10.187 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 8 completed (16042.047 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 9 started ======
Benchmark: GC before operation: completed in 25.814 ms, heap usage 635.127 MB -> 10.187 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 9 completed (16537.015 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 10 started ======
Benchmark: GC before operation: completed in 19.293 ms, heap usage 573.270 MB -> 10.187 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 10 completed (16045.861 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 11 started ======
Benchmark: GC before operation: completed in 16.371 ms, heap usage 530.490 MB -> 10.188 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 11 completed (17060.260 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 12 started ======
Benchmark: GC before operation: completed in 16.313 ms, heap usage 666.336 MB -> 10.189 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 12 completed (16768.069 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 13 started ======
Benchmark: GC before operation: completed in 18.913 ms, heap usage 653.005 MB -> 10.189 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 13 completed (18896.048 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 14 started ======
Benchmark: GC before operation: completed in 22.962 ms, heap usage 524.830 MB -> 10.189 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 14 completed (18382.155 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 15 started ======
Benchmark: GC before operation: completed in 21.079 ms, heap usage 643.867 MB -> 10.186 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 15 completed (17055.193 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 16 started ======
Benchmark: GC before operation: completed in 19.465 ms, heap usage 579.270 MB -> 10.186 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 16 completed (16950.327 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 17 started ======
Benchmark: GC before operation: completed in 25.595 ms, heap usage 45.387 MB -> 9.617 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 17 completed (15638.749 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 18 started ======
Benchmark: GC before operation: completed in 16.337 ms, heap usage 57.652 MB -> 9.620 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 18 completed (15736.603 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 19 started ======
Benchmark: GC before operation: completed in 18.209 ms, heap usage 661.349 MB -> 9.617 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 19 completed (16030.089 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 20 started ======
Benchmark: GC before operation: completed in 18.117 ms, heap usage 531.660 MB -> 9.616 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 20 completed (16450.441 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 21 started ======
Benchmark: GC before operation: completed in 35.762 ms, heap usage 600.584 MB -> 9.617 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 21 completed (15768.677 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 22 started ======
Benchmark: GC before operation: completed in 17.548 ms, heap usage 665.116 MB -> 9.617 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 22 completed (17332.805 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 23 started ======
Benchmark: GC before operation: completed in 18.744 ms, heap usage 464.527 MB -> 9.618 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 23 completed (16318.556 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 24 started ======
Benchmark: GC before operation: completed in 22.000 ms, heap usage 582.036 MB -> 9.617 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 24 completed (16079.309 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 25 started ======
Benchmark: GC before operation: completed in 15.248 ms, heap usage 509.616 MB -> 9.618 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 25 completed (16523.807 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 26 started ======
Benchmark: GC before operation: completed in 16.016 ms, heap usage 469.617 MB -> 9.618 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 26 completed (16089.784 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 27 started ======
Benchmark: GC before operation: completed in 21.557 ms, heap usage 612.872 MB -> 9.618 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 27 completed (16177.864 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 28 started ======
Benchmark: GC before operation: completed in 19.716 ms, heap usage 627.431 MB -> 9.618 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 28 completed (16215.717 ms) ======
Benchmark: ====== reactors (concurrency) [default], iteration 29 started ======
Benchmark: GC before operation: completed in 16.783 ms, heap usage 618.543 MB -> 9.618 MB.
Benchmark: Baseline workload: Reactor scheduling events
Benchmark: BigBench workload: Many-to-many message ping pong
Benchmark: CountingActor workload: Single reactor event processing
Benchmark: Fibonacci workload: Dynamic reactor mix with varying lifetimes
Benchmark: ForkJoinCreation workload: Reactor creation performance
Benchmark: ForkJoinThroughput workload: Reactor processing performance
Benchmark: PingPong workload: Reactor pair sequential ping pong performance
Benchmark: StreamingPingPong workload: Reactor pair overlapping ping pong performance
Benchmark: Roundabout workload: Many channels reactor performance
Benchmark: ThreadRing workload: Reactor ring forwarding performance
Benchmark: ====== reactors (concurrency) [default], iteration 29 completed (17138.454 ms) ======
